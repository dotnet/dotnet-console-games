@using System
@using System.Diagnostics
@using Console = Website.Console<Website.Games.Rock_Paper_Scissors.Rock_Paper_Scissors>

@page "/Rock Paper Scissors"

<PageTitle>Rock Paper Scissors</PageTitle>

<h1>Rock Paper Scissors</h1>

<a href="https://github.com/ZacharyPatten/dotnet-console-games/tree/main/Projects/Rock%20Paper%20Scissors" alt="Go To Readme">
	<img title="Go To Readme" alt="Go To Readme" src="https://img.shields.io/badge/readme-black?logo=github&amp&style=flat-square">
</a>

<div class="console-window text-center my-3" @onkeydown="@Console.OnKeyDown" tabindex="0">
	<div class="d-inline-block bg-dark text-light border p-2 text-start shadow padding-0">
		<pre class="console">
			<code>@Console.State</code>
		</pre>
	</div>
	<div>
		<button class="btn btn-primary" @onclick="() => { Console._inputBuffer.Enqueue(new ConsoleKeyInfo('r',  ConsoleKey.R,     false, false, false)); }">r</button>
		<button class="btn btn-primary" @onclick="() => { Console._inputBuffer.Enqueue(new ConsoleKeyInfo('p',  ConsoleKey.P,     false, false, false)); }">p</button>
		<button class="btn btn-primary" @onclick="() => { Console._inputBuffer.Enqueue(new ConsoleKeyInfo('s',  ConsoleKey.S,     false, false, false)); }">s</button>
		<button class="btn btn-primary" @onclick="() => { Console._inputBuffer.Enqueue(new ConsoleKeyInfo('\n', ConsoleKey.Enter, false, false, false)); }">enter</button>
		<button class="btn btn-primary" @onclick="() => { Console._inputBuffer.Enqueue(new ConsoleKeyInfo('e',  ConsoleKey.E,     false, false, false)); }">e</button>
	</div>
</div>

<div class="alert alert-secondary" role="alert">
	&#9000; Keyboard input is supported if you <strong>click</strong> on the game.
</div>

@code
{
	protected override void OnInitialized()
	{
		Console._refresh = StateHasChanged;
		InvokeAsync(Games.Rock_Paper_Scissors.Rock_Paper_Scissors.Run);
	}
}
